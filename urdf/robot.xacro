<?xml version='1.0'?>

<robot name="robot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:property name="chassis_width" value="0.15"/>
  <xacro:property name="chassis_length" value="0.2"/>
  <xacro:property name="chassis_height" value="0.05"/>
  <xacro:property name="chassis_mass" value="0.5"/>
  <xacro:property name="wheel_radius" value="0.04"/>
  <xacro:property name="wheel_width" value="0.03"/>
  <xacro:property name="camera_link" value="0.05" /> 

  <xacro:include filename="$(find enph353_ros_lab)/urdf/macros.xacro" />

  <xacro:macro name="default_inertial" params="mass">
    <inertial>
      <mass value="${mass}" />
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
  </xacro:macro>

  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>

  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>

  <link name='chassis'>
    <xacro:box_inertial name="chassis" m="${chassis_mass}" x="${chassis_length}" y="${chassis_width}" z="${chassis_height}"/>

    <collision name='chassis_collision'>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </collision>
    <xacro:default_inertial mass="1"/>
    
    <visual name='chassis_visual'>
      <origin xyz="0 0 0" rpy=" 0 0 0"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </visual>
  </link>

  <link name="left_front_wheel">
    <xacro:cylinder_inertial name="wheel" m="0.1" r="${wheel_radius}" h="${wheel_width}" />
    <xacro:default_inertial mass="0.1"/>    
    <visual>
      <origin rpy="1.57075 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>>
    </visual>
    <collision name='wheel_collision'>
      <origin rpy="1.57075 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>>
    </collision>
  </link>

  <joint name="left_front_wheel_joint" type="continuous">
    <axis xyz="0 1 0" />
    <parent link="chassis"/>
    <child link="left_front_wheel"/>
    <origin rpy="0 0 0" xyz="0.1 0.09 0"/>
  </joint>

  <link name="right_front_wheel">
    <xacro:cylinder_inertial name="wheel" m="0.1" r="${wheel_radius}" h="${wheel_width}" />
    <xacro:default_inertial mass="0.1"/>    
    <visual>
      <origin rpy="1.57075 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>>
    </visual>
    <collision name='wheel_collision'>
      <origin rpy="1.57075 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>>
    </collision>
  </link>

  <joint name="right_front_wheel_joint" type="continuous">
    <axis xyz="0 1 0" />
    <parent link="chassis"/>
    <child link="right_front_wheel"/>
    <origin rpy="0 0 0" xyz="0.1 -0.09 0"/>
  </joint>





  <link name="left_back_wheel">
    <xacro:cylinder_inertial name="wheel" m="0.1" r="${wheel_radius}" h="${wheel_width}" />
    <xacro:default_inertial mass="0.1"/>    
    <visual>
      <origin rpy="1.57075 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>>
    </visual>
    <collision name='wheel_collision'>
      <origin rpy="1.57075 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>>
    </collision>
  </link>

  <joint name="left_back_wheel_joint" type="continuous">
    <axis xyz="0 1 0" />
    <parent link="chassis"/>
    <child link="left_back_wheel"/>
    <origin rpy="0 0 0" xyz="-0.1 0.09 0"/>
  </joint>

  <link name="right_back_wheel">
    <xacro:cylinder_inertial name="wheel" m="0.1" r="${wheel_radius}" h="${wheel_width}" />
    <xacro:default_inertial mass="0.1"/>    
    <visual>
      <origin rpy="1.57075 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>>
    </visual>
    <collision name='wheel_collision'>
      <origin rpy="1.57075 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="${wheel_width}" radius="${wheel_radius}"/>
      </geometry>>
    </collision>
  </link>

  <joint name="right_back_wheel_joint" type="continuous">
    <axis xyz="0 1 0" />
    <parent link="chassis"/>
    <child link="right_back_wheel"/>
    <origin rpy="0 0 0" xyz="-0.1 -0.09 0"/>
  </joint>










 <!-- Camera -->

 <joint name="camera_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <parent link="chassis"/>
    <child link="camera_link"/>
  </joint>

  <link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="${camera_link} ${camera_link} ${camera_link}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="${camera_link} ${camera_link} ${camera_link}"/>
      </geometry>
      <material name="red"/>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>


<gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>


<gazebo>
  <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
    <updateRate>100.0</updateRate>
    <robotNamespace>/</robotNamespace>
    <leftFrontJoint>left_front_wheel_joint</leftFrontJoint>
    <rightFrontJoint>right_front_wheel_joint</rightFrontJoint>
    <leftRearJoint>left_back_wheel_joint</leftRearJoint>
    <rightRearJoint>right_back_wheel_joint</rightRearJoint>
    <wheelSeparation>0.18</wheelSeparation>
    <wheelDiameter>0.08</wheelDiameter>
    <robotBaseFrame>chassis</robotBaseFrame>
    <torque>1</torque>
    <topicName>cmd_vel</topicName>
    <broadcastTF>false</broadcastTF>
  </plugin>
</gazebo>

</robot>
